name: CI/CD to Render

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5' # Use the Go version you're using

    - name: Install dependencies
      run: |
        cd ./Flash_queue_backend
        go mod tidy
        
    - name: Clean Up Docker
      run: |
        # Stop and remove any existing container using port 5432
        EXISTING_CONTAINER=$(docker ps -q -f "publish=5432")
        if [ -n "$EXISTING_CONTAINER" ]; then
          echo "Stopping existing container $EXISTING_CONTAINER..."
          docker stop $EXISTING_CONTAINER
          echo "Removing existing container $EXISTING_CONTAINER..."
          docker rm $EXISTING_CONTAINER
        fi
        # Clean up dangling Docker images and networks
        docker system prune -f

    - name: Run Postgres
      run: |
        docker run --name postgres16 -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=user%40123 -e POSTGRES_DB=Flash-Queue -d postgres:16-alpine

    - name: Wait for Postgres
      run: |
        until docker exec postgres16 pg_isready -h localhost -p 5432 -U Flash-Queue; do
          echo "Waiting for postgres..."
          sleep 1
        done
        
    - name: Install golangci-lint
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        export PATH=$PATH:$(go env GOPATH)/bin
      
    - name: Run golangci-lint
      run: |
        cd ./Flash_queue_backend
        golangci-lint run
      
    - name: Run tests
      run: |
        cd ./Flash_queue_backend
        go test ./...

    - name: Build project
      run: |
        cd ./Flash_queue_backend
        go build -o Flash_Queue_backend

    - name: Deploy to Render
      env:
        DB_CONNECT:  "host=localhost user=postgres password=user%40123 dbname=Flash-Queue port=5432 sslmode=disable"
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        curl -X POST "https://api.render.com/v1/services/your-service-id/deploys" \
        -H "Authorization: Bearer $RENDER_API_KEY"
